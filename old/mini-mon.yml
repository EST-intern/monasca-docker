- name: Enables the docker containers needed for a stand alone Monasca, aka mini-mon. This setup has each service in its own container.
  hosts: mini-mon
  vars:
    # I didn't want to set the default everywhere so I set a variable with a variable. Common options are stopped, absent
    state: "{{ action | default('running') }}"
    docker_host: "{{ ansible_env.DOCKER_HOST | default('unix://var/run/docker.sock') }}"
  tasks:
  - name: influxdb
    docker:
        image: monasca/influxdb:{{ influxdb_tag | default('latest') }}
        name: influxdb
        state: "{{state}}"
        ports:
          - "8083:8083"
          - "8084:8084"
          - "8086:8086"
        docker_url: "{{docker_host}}"
    tags:
      - influxdb
  - name: mysql (percona xtraDB cluster)
    docker:
        image: monasca/mysql:{{ mysql_tag | default('latest') }}
        name: mysql
        state: "{{state}}"
        ports:
          - "3306:3306"
        docker_url: "{{docker_host}}"
    tags:
      - mysql
  - name: zookeeper
    docker:
        image: monasca/zookeeper:{{ zookeeper_tag | default('latest') }}
        name: zookeeper
        state: "{{state}}"
        ports:
          - "2181:2181"
        docker_url: "{{docker_host}}"
    tags:
      - zookeeper
  - name: kafka
    docker:
        image: monasca/kafka:{{ kafka_tag | default('latest') }}
        name: kafka
        hostname: kafka  # This is important so that kafka registers itself properly in zookeeper
        state: "{{state}}"
        ports:
          - "9092:9092"
        links:
          - zookeeper:zookeeper
        docker_url: "{{docker_host}}"
    tags:
      - kafka
  - name: Openstack
    docker:
        image: monasca/openstack:{{ openstack_tag | default('latest') }}
        name: openstack
        ports:
          - "80:80"
          - "5000:5000"
          - "35357:35357"
        state: "{{state}}"
        docker_url: "{{docker_host}}"
    tags:
      - openstack
  - name: persister
    docker:
        image: monasca/persister:{{ persister_tag | default('latest') }}
        name: persister
        state: "{{state}}"
        links:
          - kafka:kafka
          - influxdb:influxdb
          - zookeeper:zookeeper
        docker_url: "{{docker_host}}"
    tags:
      - persister
  - name: threshold
    docker:
        image: monasca/thresh:{{ threshold_tag | default('latest') }}
        name: thresh
        hostname: thresh
        state: "{{state}}"
        links:
          - kafka:kafka
          - mysql:mysql
          - zookeeper:zookeeper
        docker_url: "{{docker_host}}"
    tags:
      - thresh
  - name: notification
    docker:
        image: monasca/notification:{{ notification_tag | default('latest') }}
        name: notification
        state: "{{state}}"
        links:
          - kafka:kafka
          - mysql:mysql
          - zookeeper:zookeeper
        docker_url: "{{docker_host}}"
    tags:
      - notification
  - name: api
    docker:
        image: monasca/api:{{ api_tag | default('latest') }}
        name: api
        ports:
          - "8080:8080"
        state: "{{state}}"
        links:
          - kafka:kafka
          - influxdb:influxdb
          - mysql:mysql
          - zookeeper:zookeeper
          - openstack:keystone
        docker_url: "{{docker_host}}"
    tags:
      - api
  - name: agent
    docker:
        image: monasca/agent:{{ agent_tag | default('latest') }}
        name: agent
        tty: True
        stdin_open: True
        state: "{{state}}"
        links:
          - api:api
          - openstack:keystone
        docker_url: "{{docker_host}}"
    tags:
      - agent
